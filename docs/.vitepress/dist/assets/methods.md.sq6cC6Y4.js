import{_ as a,c as s,o as i,V as l}from"./chunks/framework.sQR5-f0p.js";const E=JSON.parse('{"title":"方法","description":"","frontmatter":{},"headers":[],"relativePath":"methods.md","filePath":"methods.md","lastUpdated":1706112864000}'),e={name:"methods.md"},t=l(`<h1 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h1><p>目前只提供以下API,且api的命名基本上都是见名知义,且大多都在例子中有使用过。</p><p>如果无法满足您的需求，您需要一些特别的api,可以直接提<a href="https://gitee.com/ajiho/quicktab/issues" target="_blank" rel="noreferrer">issues</a>,一起讨论。</p><h2 id="静态方法" tabindex="-1">静态方法 <a class="header-anchor" href="#静态方法" aria-label="Permalink to &quot;静态方法&quot;">​</a></h2><h3 id="get-id" tabindex="-1">get(id) <a class="header-anchor" href="#get-id" aria-label="Permalink to &quot;get(id)&quot;">​</a></h3><p>可以根据id得到<code>Quicktab</code>的实例</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 直接通过data属性初始化的 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;qtab4&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> data-qt-toggle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;quicktab&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 下面通过js初始化 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;qtab3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> qtab3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Quicktab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;qtab3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,{})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(qtab3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Quicktab.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;qtab3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> qtab4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Quicktab.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;qtab4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="实例方法" tabindex="-1">实例方法 <a class="header-anchor" href="#实例方法" aria-label="Permalink to &quot;实例方法&quot;">​</a></h2><h3 id="addtab-option" tabindex="-1">addTab(option) <a class="header-anchor" href="#addtab-option" aria-label="Permalink to &quot;addTab(option)&quot;">​</a></h3><p>这是最核心的方法,添加Tab,参数是一个<a href="./options.html#单tab默认选项">单tab对象</a>其中只有url是必填的，其它都走默认值</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> qtab</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Quicktab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;qtab&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">qtab.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addTab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    url:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="closetabbyurl-url" tabindex="-1">closeTabByUrl(url) <a class="header-anchor" href="#closetabbyurl-url" aria-label="Permalink to &quot;closeTabByUrl(url)&quot;">​</a></h3><p>根据url来关闭tab</p><h3 id="activetabbyurl-url" tabindex="-1">activeTabByUrl(url) <a class="header-anchor" href="#activetabbyurl-url" aria-label="Permalink to &quot;activeTabByUrl(url)&quot;">​</a></h3><p>根据url来激活tab</p><h3 id="scrolltotabbyurl-url" tabindex="-1">scrollToTabByUrl(url) <a class="header-anchor" href="#scrolltotabbyurl-url" aria-label="Permalink to &quot;scrollToTabByUrl(url)&quot;">​</a></h3><p>滚动到指定url对应的tab的位置</p><h3 id="prevscroll" tabindex="-1">prevScroll() <a class="header-anchor" href="#prevscroll" aria-label="Permalink to &quot;prevScroll()&quot;">​</a></h3><p>向左滚动一个tab容器可视单位</p><h3 id="nextscroll" tabindex="-1">nextScroll() <a class="header-anchor" href="#nextscroll" aria-label="Permalink to &quot;nextScroll()&quot;">​</a></h3><p>向右滚动一个tab容器可视单位</p><h3 id="refreshtabbyurl" tabindex="-1">refreshTabByUrl() <a class="header-anchor" href="#refreshtabbyurl" aria-label="Permalink to &quot;refreshTabByUrl()&quot;">​</a></h3><p>根据url来刷新tab</p><h3 id="fullscreentabbyurl" tabindex="-1">fullscreenTabByUrl() <a class="header-anchor" href="#fullscreentabbyurl" aria-label="Permalink to &quot;fullscreenTabByUrl()&quot;">​</a></h3><p>根据url全屏显示tab</p><h3 id="refreshactivetab" tabindex="-1">refreshActiveTab() <a class="header-anchor" href="#refreshactivetab" aria-label="Permalink to &quot;refreshActiveTab()&quot;">​</a></h3><p>刷新当前激活的tab</p><h3 id="fullscreenactivetab" tabindex="-1">fullscreenActiveTab() <a class="header-anchor" href="#fullscreenactivetab" aria-label="Permalink to &quot;fullscreenActiveTab()&quot;">​</a></h3><p>当前激活的tab全屏显示</p><h3 id="scrolltoactivetab" tabindex="-1">scrollToActiveTab() <a class="header-anchor" href="#scrolltoactivetab" aria-label="Permalink to &quot;scrollToActiveTab()&quot;">​</a></h3><p>滚动到当前激活的tab所在位置</p><h3 id="opennewtabbyurl" tabindex="-1">openNewTabByUrl() <a class="header-anchor" href="#opennewtabbyurl" aria-label="Permalink to &quot;openNewTabByUrl()&quot;">​</a></h3><p>在浏览器新选项卡打开指定url的tab</p><h3 id="closealltabsexceptbyurl" tabindex="-1">closeAllTabsExceptByUrl() <a class="header-anchor" href="#closealltabsexceptbyurl" aria-label="Permalink to &quot;closeAllTabsExceptByUrl()&quot;">​</a></h3><p>关闭所有的除了指定url的选项卡</p><h3 id="closeprevalltabsbyurl" tabindex="-1">closePrevAllTabsByUrl() <a class="header-anchor" href="#closeprevalltabsbyurl" aria-label="Permalink to &quot;closePrevAllTabsByUrl()&quot;">​</a></h3><p>关闭除了指定url的tab前面所有的选项卡</p><h3 id="closenextalltabsbyurl" tabindex="-1">closeNextAllTabsByUrl() <a class="header-anchor" href="#closenextalltabsbyurl" aria-label="Permalink to &quot;closeNextAllTabsByUrl()&quot;">​</a></h3><p>关闭除了指定url的tab后面所有的选项卡</p><h3 id="gettabwindowbyurl" tabindex="-1">getTabWindowByUrl() <a class="header-anchor" href="#gettabwindowbyurl" aria-label="Permalink to &quot;getTabWindowByUrl()&quot;">​</a></h3><p>获取指定url的tab的contentWindow对象</p>`,41),n=[t];function r(h,p,k,d,o,b){return i(),s("div",null,n)}const u=a(e,[["render",r]]);export{E as __pageData,u as default};
